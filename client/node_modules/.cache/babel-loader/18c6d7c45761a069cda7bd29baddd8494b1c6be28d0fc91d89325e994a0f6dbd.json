{"ast":null,"code":"var _jsxFileName = \"C:\\\\e-waste-facility locator\\\\client\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    text: 'Hello! I\\'m your e-waste recycling assistant. How can I help you today?',\n    sender: 'bot'\n  }]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const toggleChat = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSendMessage = async () => {\n    if (input.trim() && !isLoading) {\n      const userMessage = input.trim();\n      setInput('');\n      setIsLoading(true);\n\n      // Add user message to chat\n      setMessages(prev => [...prev, {\n        text: userMessage,\n        sender: 'user'\n      }]);\n      try {\n        const response = await fetch('/api/chat', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            message: userMessage\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to get response from chatbot');\n        }\n        const data = await response.json();\n\n        // Add bot response to chat\n        setMessages(prev => [...prev, {\n          text: data.response,\n          sender: 'bot'\n        }]);\n      } catch (error) {\n        console.error('Error:', error);\n        // Add error message to chat\n        setMessages(prev => [...prev, {\n          text: 'Sorry, I\\'m having trouble connecting right now. Please try again later.',\n          sender: 'bot'\n        }]);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-icon\",\n      onClick: toggleChat,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/chatbot-icon.jpg\",\n        alt: \"Chatbot Icon\",\n        style: {\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-window ${isOpen ? 'open' : 'closed'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: toggleChat,\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"E-Waste Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-history\",\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-message ${message.sender}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-bubble\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-message bot\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-bubble\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typing-indicator\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Ask about e-waste recycling...\",\n          value: input,\n          onChange: handleInputChange,\n          onKeyPress: handleKeyPress,\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          disabled: isLoading || !input.trim(),\n          children: isLoading ? '...' : '➤'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"jyffXNpOYpd8MyeafpEY1BesJqc=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Chatbot","_s","isOpen","setIsOpen","messages","setMessages","text","sender","input","setInput","isLoading","setIsLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","toggleChat","handleInputChange","e","target","value","handleSendMessage","trim","userMessage","prev","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","data","json","error","console","handleKeyPress","key","shiftKey","preventDefault","className","children","onClick","src","alt","style","width","height","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","map","index","ref","type","placeholder","onChange","onKeyPress","disabled","_c","$RefreshReg$"],"sources":["C:/e-waste-facility locator/client/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './Chatbot.css';\r\n\r\nconst Chatbot = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([\r\n    { text: 'Hello! I\\'m your e-waste recycling assistant. How can I help you today?', sender: 'bot' }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const toggleChat = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (input.trim() && !isLoading) {\r\n      const userMessage = input.trim();\r\n      setInput('');\r\n      setIsLoading(true);\r\n\r\n      // Add user message to chat\r\n      setMessages(prev => [...prev, { text: userMessage, sender: 'user' }]);\r\n\r\n      try {\r\n        const response = await fetch('/api/chat', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ message: userMessage }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to get response from chatbot');\r\n        }\r\n\r\n        const data = await response.json();\r\n        \r\n        // Add bot response to chat\r\n        setMessages(prev => [...prev, { text: data.response, sender: 'bot' }]);\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        // Add error message to chat\r\n        setMessages(prev => [...prev, { \r\n          text: 'Sorry, I\\'m having trouble connecting right now. Please try again later.', \r\n          sender: 'bot' \r\n        }]);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      {/* Chatbot Icon */}\r\n      <div className=\"chatbot-icon\" onClick={toggleChat}>\r\n        <img src=\"/images/chatbot-icon.jpg\" alt=\"Chatbot Icon\" style={{ width: '100%', height: '100%', objectFit: 'contain' }} />\r\n      </div>\r\n\r\n      {/* Chat Window */}\r\n      <div className={`chat-window ${isOpen ? 'open' : 'closed'}`}>\r\n        <div className=\"chat-header\">\r\n          <button className=\"back-button\" onClick={toggleChat}>&larr;</button>\r\n          <h2>E-Waste Assistant</h2>\r\n        </div>\r\n        <div className=\"chat-body\">\r\n          <div className=\"message-history\">\r\n            {messages.map((message, index) => (\r\n              <div key={index} className={`chat-message ${message.sender}`}>\r\n                <div className=\"message-bubble\">\r\n                  {message.text}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {isLoading && (\r\n              <div className=\"chat-message bot\">\r\n                <div className=\"message-bubble\">\r\n                  <div className=\"typing-indicator\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n        </div>\r\n        <div className=\"chat-input-area\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Ask about e-waste recycling...\"\r\n            value={input}\r\n            onChange={handleInputChange}\r\n            onKeyPress={handleKeyPress}\r\n            disabled={isLoading}\r\n          />\r\n          <button onClick={handleSendMessage} disabled={isLoading || !input.trim()}>\r\n            {isLoading ? '...' : '➤'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}