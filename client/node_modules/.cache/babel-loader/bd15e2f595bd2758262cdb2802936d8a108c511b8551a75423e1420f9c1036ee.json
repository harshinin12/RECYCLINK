{"ast":null,"code":"var _jsxFileName = \"C:\\\\e-waste-facility locator\\\\client\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  // Placeholder for messages state\n  const [messages, setMessages] = useState([{\n    text: 'Hey AI, I\\'m thinking about planning my next trip. Any suggestions for somewhere beautiful and relaxing?',\n    sender: 'user'\n  }, {\n    text: 'Absolutely! If you\\'re looking for beauty and relaxation, I\\'d recommend the Greek islands, the Amalfi Coast in Italy, or Bali in Indonesia. Do you have any preferences beaches, culture, or food?',\n    sender: 'bot'\n  }\n  // Add more placeholder messages as needed\n  ]);\n  const [input, setInput] = useState('');\n  const toggleChat = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSendMessage = () => {\n    if (input.trim()) {\n      // Add user message to state (frontend only for now)\n      setMessages([...messages, {\n        text: input,\n        sender: 'user'\n      }]);\n      setInput('');\n      // In a real implementation, you would send the message to your backend here\n    }\n  };\n\n  // Allow sending message on Enter key press\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-icon\",\n      onClick: toggleChat,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/chatbot-icon.jpg\",\n        alt: \"Chatbot Icon\",\n        style: {\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-window ${isOpen ? 'open' : 'closed'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: toggleChat,\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-history\",\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-message ${message.sender}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-bubble\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Reply to ThinkAI\",\n          value: input,\n          onChange: handleInputChange,\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"\\u27A4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"tHejDqCoZhiA0xcPaGPHuxRtM3w=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","isOpen","setIsOpen","messages","setMessages","text","sender","input","setInput","toggleChat","handleInputChange","e","target","value","handleSendMessage","trim","handleKeyPress","key","className","children","onClick","src","alt","style","width","height","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","type","placeholder","onChange","onKeyPress","_c","$RefreshReg$"],"sources":["C:/e-waste-facility locator/client/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Chatbot.css';\r\n\r\nconst Chatbot = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  // Placeholder for messages state\r\n  const [messages, setMessages] = useState([\r\n    { text: 'Hey AI, I\\'m thinking about planning my next trip. Any suggestions for somewhere beautiful and relaxing?', sender: 'user' },\r\n    { text: 'Absolutely! If you\\'re looking for beauty and relaxation, I\\'d recommend the Greek islands, the Amalfi Coast in Italy, or Bali in Indonesia. Do you have any preferences beaches, culture, or food?', sender: 'bot' },\r\n    // Add more placeholder messages as needed\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const toggleChat = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (input.trim()) {\r\n      // Add user message to state (frontend only for now)\r\n      setMessages([...messages, { text: input, sender: 'user' }]);\r\n      setInput('');\r\n      // In a real implementation, you would send the message to your backend here\r\n    }\r\n  };\r\n\r\n  // Allow sending message on Enter key press\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      {/* Chatbot Icon */}\r\n      <div className=\"chatbot-icon\" onClick={toggleChat}>\r\n        {/* Replace the emoji with an image tag pointing to your icon file */}\r\n        <img src=\"/images/chatbot-icon.jpg\" alt=\"Chatbot Icon\" style={{ width: '100%', height: '100%', objectFit: 'contain' }} />\r\n      </div>\r\n\r\n      {/* Chat Window */}\r\n      <div className={`chat-window ${isOpen ? 'open' : 'closed'}`}>\r\n        <div className=\"chat-header\">\r\n          <button className=\"back-button\" onClick={toggleChat}>&larr;</button>\r\n          <h2>Messages</h2>\r\n        </div>\r\n        {/* Updated chat body for message display */}\r\n        <div className=\"chat-body\">\r\n          <div className=\"message-history\">\r\n            {messages.map((message, index) => (\r\n              <div key={index} className={`chat-message ${message.sender}`}>\r\n                <div className=\"message-bubble\">\r\n                  {message.text}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {/* New input area */}\r\n        <div className=\"chat-input-area\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Reply to ThinkAI\"\r\n            value={input}\r\n            onChange={handleInputChange}\r\n            onKeyPress={handleKeyPress}\r\n          />\r\n          <button onClick={handleSendMessage}>âž¤</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}